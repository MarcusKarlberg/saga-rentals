#Producer
spring.application.name=RentalsMicroservice
server.port=45231
spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.producer.bootstrap-servers=localhost:29092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


#Consumer
spring.kafka.consumer.bootstrap-servers=localhost:29092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=rental-created-events

## Core module
spring.kafka.consumer.properties.spring.json.trusted.packages=se.marcuskarlberg.commands,se.marcuskarlberg.events
spring.kafka.consumer.auto-offset-reset=earliest

#Idempotence
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.acks=all
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5
spring.kafka.producer.properties.retries=2147345345

spring.datasource.username=h2
spring.datasource.password=h2
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true

logging.level.org.springframework.kafka.transaction.KafkaAwareTransactionManager=DEBUG
logging.level.org.apache.kafka.clients.producer.internals.TransactionManager=DEBUG
logging.level.org.springframework.transaction=DEBUG
logging.level.org.springframework.orm.jpa.JpaTransactionManager=DEBUG

#Topics
rental.events.created.topic.name=rental-created-events-topic
rental.commands.topic.name=rental-commands-topic
